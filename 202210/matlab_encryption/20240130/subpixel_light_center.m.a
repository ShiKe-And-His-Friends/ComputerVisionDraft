%%提取光条图片中心的坐标

clc;
clear;
close all;

%%遍历数据集
str = 'E:\project\Matlab_code_lcubor\src_file\';
% str = 'E:\test\'

%%常量定义
file_num = 33;
window_size = 15;
binary_threshold = 60;
image_width = 4320;
image_height = 1080;

%% 5*5高斯滤波核
core_gauss_5_5 = [15,29,36,29,15;29,56,70,56,29;36,70,87,70,36;29,56,70,56,29;15,29,36,29,15];
gauss_row = [123,239,300,239,123];
gauss_col = [122;244;292;244;122];

%% 亚像素计算坐标滤波核
core_gauss_7 = [4;63;250;390;250;63;4];
core_gauss_15 = [2;7;20;44;80;121;154;168;154;121;80;44;20;7;2];
%core_gauss_15=[2;7;20;44;121;154;168;168;154;121;80;44;20;7;2];   % 改进非对称滤波核
%core_gauss_15=[2;7;20;44;80;121;180;180;180;121;80;44;20;7;2];    % 对称尖峰滤波核
core_gauss_31 = [1;2;3;5;8;12;18;25;33;41;50;58;67;73;77;78;77;73;67;58;50;41;33;25;18;12;8;5;3;2;1];

%%内存分配
center_stripe_diff = zeros(file_num ,image_width); %亚像素计算中心窗口坐标-差值和方法
center_stripe_gauss = zeros(file_num ,image_width); %亚像素计算中心窗口坐标-高斯滤波方法
image_stripe_width = zeros(file_num ,image_width); %每张图片列的光条宽度
center_stripe_subpix = zeros(file_num ,image_width); %光条中心亚像素坐标
center_stripe_intensity = zeros(file_num ,image_width); %光条中心灰度图

%%循环处理图片

for k = 1:file_num
    %%获取文件夹图像
    src = double(imread([str ,num2str(k),'.bmp']));
    src = src(: ,: ,1);
    
%     %% 计算FPGA用的5*5滤波
%     [g_row ,g_col] = size(src);
%     fpga_gauss_5_5 = zeros(g_row ,g_col); %滤波后的图像
%     padding = zeros(g_row + 4 ,g_col + 4); %padding后的图像
%     %padding 镜像填充
%     for gi = 1: g_row
%         for gj=1:g_col
%             padding(gi+2 ,gj+2) = src(gi,gj);
%         end
%     end
%     padding(3:2+image_height ,2) = src(:,1);
%     padding(3:2+image_height ,1) = src(:,2);
%     padding(3:2 + image_height ,3+image_width) = src(:,image_width);
%     padding(3:2 + image_height ,4+image_width) = src(:,image_width-1);
%     padding(1,:) = padding(4,:);
%     padding(2,:) = padding(3,:);
%     padding(3+image_height ,:) = padding(image_height ,:);
%     padding(4+image_height ,:) = padding(image_height-1 ,:);
%     % FPGA的高斯滤波
%     fpga_gauss_row_res = zeros(1,5);
%     for gi=3:g_row+2
%         for gj = 3:g_col+2
%             for gk = 1:5
%                 fpga_gauss_row_res(gk) = padding(gi - 2 + gk - 1, gj - 2) * gauss_row(1) + padding(gi - 2 + gk - 1, gj - 1) * gauss_row(2) + ...
%                     padding(gi - 2 + gk - 1, gj) * gauss_row(3) + ...
%                     padding(gi - 2 + gk - 1, gj + 1) * gauss_row(4) + padding(gi - 2 + gk - 1, gj + 2) * gauss_row(5);
%             end
%             fpga_gauss_res = fpga_gauss_row_res * gauss_col;
%             fpga_gauss_5_5(gi-2 ,gj-2) = double(floor(fpga_gauss_res/1024^2));
%         end
%     end
    
    %% matlab仿真用高斯滤波核心
    %[B_5 ,IX_5] = sort(src_gauss_5_5 ,1 ,'descend');%5*5高斯滤波的结果
    %[B ,IX] = sort(src_gauss_15 ,1 ,'descend');
    matlab_gauss_5_5 = imfilter(src ,core_gauss_5_5);
    matlab_gauss_5_5 = double(floor(matlab_gauss_5_5 / sum(sum(core_gauss_5_5))));
    
    %%生成fpga滤波核
    src_gauss_5_5 = matlab_gauss_5_5;
    
    %%用一维高斯滤波求亚像素计算窗口位置
    src_gauss = imfilter(src_gauss_5_5 ,core_gauss_15); %/sum(core_gauss_15)
    
    %% 计算高斯一维滤波的最大位置
    [~ ,index_gauss] = max(src_gauss ,[] ,1);
    center_stripe_gauss(k ,:) = index_gauss;
    
    %%不加梯度判断光条搜索的起始位置和结束位置
    coord_stripe = zeros(2 ,image_width);
    for c =1:image_width
        for r = 1: image_height -1
            if src_gauss_5_5(r ,c) > binary_threshold - 1 && coord_stripe(1 ,c) == 0 && coord_stripe(2 ,c) ==0
                coord_stripe(1 ,c) = r;
            end
            if src_gauss_5_5(r ,c)< binary_threshold && coord_stripe(1 ,c) ~= 0 && coord_stripe(2 ,c)~= 0
                coord_stripe(2 ,c) = r;
            end
            if coord_stripe(1 ,c) ~= 0 && coord_stripe(2 ,c)~= 0
                width_single = coord_stripe(2 ,c) - coord_stripe(1,c);
                if width_single < 3 || width_single > 64
                    coord_stripe(1 ,c) = 0;
                    coord_stripe(2 ,c) = 0;
                end
            end
        end
    end
    
    %%计算每张图的平均光条宽度
    single_image_stripe_width = coord_stripe(2 ,:) - coord_stripe(1 ,:);
    image_stripe_width(k ,:) = single_image_stripe_width;
    
    %%对称性方法 亚像素坐标 计算窗口 中心行坐标
    for i = 1:image_width
        min_diff = realmax;
        if image_stripe_width(k ,i) >= 3 && image_stripe_width(k ,i) <= 64
            for j = coord_stripe(1 ,i):coord_stripe(2 ,i)
                %计算最小差值和的窗口位置
                sum_diff = 0;
                for m = 1:(window_size-1)/2
                    window_diff = abs(src_gauss_5_5(j+m ,i) - src_gauss_5_5(j-m ,i));
                    sum_diff = sum_diff + window_diff;
                end
                if sum_diff < min_diff
                    min_diff = sum_diff;
                    center_stripe_diff(k ,i) = j;
                end
            end
        end
    end
    
    %% 灰度重心法计算亚像素坐标-用的差值和方法的窗口中心
    for i = 1:image_width
        numer = 0; %灰度重心法-分子项 
        denom = 0; %灰度重心法-分母项
        if (window_size-1)/2 < center_stripe_diff(k,i) && center_stripe_diff(k,i) < image_height - (window_size-1)/2
            for m = -(window_size -1)/2 : (window_size-1)/2
                window_center = center_gauss_5_5(window_center + m ,i) * (window_center +m);
                denom = denom + src_gauss_5_5(window_center + m ,i);
            end
            subpix = numer / denom;
            center_stripe_subpix(k,i) = subpix;
            center_stripe_intensity(k,i) = uint8(denom / window_size);
        else
            center_stripe_subpix(k,i) = 0;
            center_stripe_intensity(k,i) = 0;
        end
    end
    
end

%%保存轮廓图和强度图
%center_stripe_intensity = imadjust(center_stripe_intensity); %调整对比度方便查看
imwrite(center_stripe_intensity ,'E:\project\Matlab_code_lcubor\raw_dst_file\intensity.bmp');
%center_stripe_subpix = imadjust(center_stripe_subpix); %调整对比度方便查看
imwrite(uint16(center_stripe_subpix) ,'E:\project\Matlab_code_lcubor\raw_dst_file\range.tif');

%保存yml格式方便opencv查看
%matlab2opencv(center_stripe_intensity ,'E:\project\Matlab_code_lcubor\raw_dst_file\intensity.yml','w','%u');

% %%对亚像素计算区域的结果进行统计
% std_diff = std(center_stripe_diff ,1,1); %每一列计算重心窗口的标准差
% std_gauss = std(center_stripe_gauss ,1,1);
% val_diff = std_diff .* std_diff; %方差
% val_gauss = std_gauss .* std_gauss;
% 
% var_mean_diff = mean(var_diff);
% var_mean_gauss = mean(var_gauss);
% 
% [var_max_diff ,var_index_diff] = max(var_diff);
% [var_max_gauss ,var_index_gauss] = max(var_gauss);

% %% 计算两种方法中心点的坐标间的差距
% center_stripe_difference = center_stripe_gauss - center_stripe_diff;
% std_difference = std(center_stripe_difference ,1,1);
% std_mean_diff = mean(std_difference);
% [var_max_difference ,var_index_difference] = max(std_difference);

%%查找标准差不为0的列中，每个值与该列出现次数最多的差不超过2个像素的个数
% abnormal_diff = find(std_diff);
% for fn = 1:size(abnormal_diff ,2)
%     %计算每一列出现次数最多的数
%     max_csd = 1:max(center_stripe_diff (: ,abnormal_diff(fn)));
%     appera_num = histc(center_stripe_diff(:,abnormal_diff(fn)),max_csd);
%     [appera_num)max .appera_index_max] = max(appera_num);
%     abnormal_val = center_stripe_diff(:,abnormal_diff(fn)-appera_index_max);
%     %统计大于1个像素的离群点个数
%     plot_sign = find(abs(abnormal_val)>1);
%     if (size(plot_sign)~=0)
%         %画图
%         x = linspace(1 ,file_num ,file_num);
%         y = abnormal_val;
%         figure('visible','off');
%         titil_name = ['第',num2str(abnormal_diff(fn),'列')];
%         stem(x,y);
%         title(title_name);
%         img = gcf;
%         filename = ['E:\project\Matlab_code_lcubor\src_file\' ];
%         saveas(img,filename);
%     end
% end
% 
% abnormal_gauss = find(std_gauss);
% for fn = 1:size(abnormal_gauss ,2)
%     %计算每一列出现次数最多的数
%     max_csd = 1:max(center_stripe_diff (: ,abnormal_gauss(fn)));
%     appera_num = histc(center_stripe_diff(:,abnormal_gauss(fn)),max_csd);
%     [appera_num)max .appera_index_max] = max(appera_num);
%     abnormal_val = center_stripe_diff(:,abnormal_gauss(fn)-appera_index_max);
%     %统计大于1个像素的离群点个数
%     plot_sign = find(abs(abnormal_val)>1);
%     if (size(plot_sign)~=0)
%         %画图
%         x = linspace(1 ,file_num ,file_num);
%         y = abnormal_val;
%         figure('visible','off');
%         titil_name = ['第',num2str(abnormal_gauss(fn),'列')];
%         stem(x,y);
%         title(title_name);
%         img = gcf;
%         filename = ['E:\project\Matlab_code_lcubor\src_file\' ];
%         saveas(img,filename);
%     end
% end

%%该数据集平均的光条宽度
%stripe_width_mean = mean(stripe_width);

fprintf("Done...\n");
















